"use strict";(self.webpackChunkdisplay=self.webpackChunkdisplay||[]).push([[769],{207:(n,s,a)=>{a.r(s),a.d(s,{comp:()=>h,data:()=>f});var e=a(641);const t=(0,e.Lk)("h1",{id:"promise-then",tabindex:"-1"},[(0,e.Lk)("a",{class:"header-anchor",href:"#promise-then"},[(0,e.Lk)("span",null,"promise.then")])],-1),p=(0,e.Lk)("p",null,"then 方法可以接受两个回调函数当参数。第一个是 Promise 对象的状态变为 resolved 时调用，第二个是 Promise 对象的状态变为 rejected 时调用。这两个函数都是可选的，不一定要提供。但它们都接受 Promise 对象传出的值作为参数。",-1),o=(0,e.Lk)("p",null,[(0,e.Lk)("a",{href:"#%E6%80%BB%E7%BB%93"},"着急看代码总结点这里")],-1),c=(0,e.Lk)("p",null,"then 的使用方法有很多种,我们要实现 then 就要满足以下几种使用方式。",-1),k=(0,e.Lk)("div",{class:"language-typescript line-numbers-mode","data-highlighter":"prismjs","data-ext":"ts","data-title":"ts"},[(0,e.Lk)("pre",{class:"language-typescript"},[(0,e.Lk)("code",null,[(0,e.Lk)("span",{class:"line"},[(0,e.Lk)("span",{class:"token keyword"},"let"),(0,e.eW)(" promise "),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"new"),(0,e.eW)(),(0,e.Lk)("span",{class:"token class-name"},[(0,e.Lk)("span",{class:"token builtin"},"Promise")]),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("res"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(" rej"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"=>"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("  "),(0,e.Lk)("span",{class:"token function"},"res"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"123"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("promise"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function"},"then"),(0,e.Lk)("span",{class:"token punctuation"},"(")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("  "),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("value"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"=>"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{"),(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.Lk)("span",{class:"token punctuation"},",")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("  "),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("error"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"=>"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{"),(0,e.Lk)("span",{class:"token punctuation"},"}")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"})])]),(0,e.Lk)("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"})])],-1),l=(0,e.Lk)("div",{class:"language-typescript line-numbers-mode","data-highlighter":"prismjs","data-ext":"ts","data-title":"ts"},[(0,e.Lk)("pre",{class:"language-typescript"},[(0,e.Lk)("code",null,[(0,e.Lk)("span",{class:"line"},[(0,e.Lk)("span",{class:"token keyword"},"let"),(0,e.eW)(" promise "),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"new"),(0,e.eW)(),(0,e.Lk)("span",{class:"token class-name"},[(0,e.Lk)("span",{class:"token builtin"},"Promise")]),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("res"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(" rej"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"=>"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("  "),(0,e.Lk)("span",{class:"token function"},"res"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"123"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"}),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("promise"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function"},"then"),(0,e.Lk)("span",{class:"token punctuation"},"(")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("  "),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("value"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"=>"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{"),(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.Lk)("span",{class:"token punctuation"},",")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("  "),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("error"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"=>"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{"),(0,e.Lk)("span",{class:"token punctuation"},"}")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("promise"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function"},"then"),(0,e.Lk)("span",{class:"token punctuation"},"(")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("  "),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("value"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"=>"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{"),(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.Lk)("span",{class:"token punctuation"},",")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("  "),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("error"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"=>"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{"),(0,e.Lk)("span",{class:"token punctuation"},"}")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"})])]),(0,e.Lk)("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"})])],-1),i=(0,e.Lk)("div",{class:"language-typescript line-numbers-mode","data-highlighter":"prismjs","data-ext":"ts","data-title":"ts"},[(0,e.Lk)("pre",{class:"language-typescript"},[(0,e.Lk)("code",null,[(0,e.Lk)("span",{class:"line"},[(0,e.Lk)("span",{class:"token keyword"},"let"),(0,e.eW)(" promise "),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"new"),(0,e.eW)(),(0,e.Lk)("span",{class:"token class-name"},[(0,e.Lk)("span",{class:"token builtin"},"Promise")]),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("res"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(" rej"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"=>"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("  "),(0,e.Lk)("span",{class:"token function"},"res"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"123"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},"promise"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("  "),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function"},"then"),(0,e.Lk)("span",{class:"token punctuation"},"(")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("    "),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("value"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"=>"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{"),(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.Lk)("span",{class:"token punctuation"},",")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("    "),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("error"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"=>"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{"),(0,e.Lk)("span",{class:"token punctuation"},"}")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("  "),(0,e.Lk)("span",{class:"token punctuation"},")")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("  "),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function"},"then"),(0,e.Lk)("span",{class:"token punctuation"},"(")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("    "),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("value"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"=>"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{"),(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.Lk)("span",{class:"token punctuation"},",")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("    "),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("error"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"=>"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{"),(0,e.Lk)("span",{class:"token punctuation"},"}")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("  "),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"})])]),(0,e.Lk)("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"})])],-1),u=(0,e.Lk)("h2",{id:"then-的基础实现",tabindex:"-1"},[(0,e.Lk)("a",{class:"header-anchor",href:"#then-的基础实现"},[(0,e.Lk)("span",null,"then 的基础实现")])],-1),L=(0,e.Lk)("p",null,"先来简单满足上述的三种使用方法",-1),r=(0,e.Lk)("div",{class:"language-typescript line-numbers-mode","data-highlighter":"prismjs","data-ext":"ts","data-title":"ts"},[(0,e.Lk)("pre",{class:"language-typescript"},[(0,e.Lk)("code",null,[(0,e.Lk)("span",{class:"line"},[(0,e.Lk)("span",{class:"token comment"},"//  A+规范 onFulfilled和onRejected都是可选参数")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.Lk)("span",{class:"token comment"},"//  2.2.1.1 如果onFulfilled不是一个函数，则必须将其忽略。")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.Lk)("span",{class:"token comment"},"//  2.2.1.2 如果onRejected不是一个函数，则必须将其忽略。")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.Lk)("span",{class:"token keyword"},"const"),(0,e.eW)(),(0,e.Lk)("span",{class:"token constant"},"FUNC"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},'"function"'),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"}),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.Lk)("span",{class:"token keyword"},"class"),(0,e.eW)(),(0,e.Lk)("span",{class:"token class-name"},"myPromise"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("  "),(0,e.Lk)("span",{class:"token comment"},"// ……省略……")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("  "),(0,e.Lk)("span",{class:"token function"},"then"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("onResolved"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"any"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(" onRejected"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"any"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("    "),(0,e.Lk)("span",{class:"token keyword"},"return"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"new"),(0,e.eW)(),(0,e.Lk)("span",{class:"token class-name"},"myPromise"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("resolve"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"any"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(" reject"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"any"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"=>"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("      "),(0,e.Lk)("span",{class:"token keyword"},"if"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("state "),(0,e.Lk)("span",{class:"token operator"},"==="),(0,e.eW)(),(0,e.Lk)("span",{class:"token constant"},"PENDING"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"return"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("      "),(0,e.Lk)("span",{class:"token keyword"},"if"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("state "),(0,e.Lk)("span",{class:"token operator"},"==="),(0,e.eW)(),(0,e.Lk)("span",{class:"token constant"},"FULFILLED"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("        "),(0,e.Lk)("span",{class:"token keyword"},"if"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token keyword"},"typeof"),(0,e.eW)(" onResolved "),(0,e.Lk)("span",{class:"token operator"},"==="),(0,e.eW)(),(0,e.Lk)("span",{class:"token constant"},"FUNC"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("          "),(0,e.Lk)("span",{class:"token keyword"},"try"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("            "),(0,e.Lk)("span",{class:"token keyword"},"const"),(0,e.eW)(" value "),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(),(0,e.Lk)("span",{class:"token function"},"onResolved"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("result"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("            "),(0,e.Lk)("span",{class:"token function"},"resolve"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("value"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("          "),(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"catch"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("err"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("            "),(0,e.Lk)("span",{class:"token function"},"reject"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("err"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("          "),(0,e.Lk)("span",{class:"token punctuation"},"}")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("        "),(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"else"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("          "),(0,e.Lk)("span",{class:"token function"},"resolve"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("result"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("        "),(0,e.Lk)("span",{class:"token punctuation"},"}")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("      "),(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"else"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("        "),(0,e.Lk)("span",{class:"token keyword"},"if"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token keyword"},"typeof"),(0,e.eW)(" onRejected "),(0,e.Lk)("span",{class:"token operator"},"==="),(0,e.eW)(),(0,e.Lk)("span",{class:"token constant"},"FUNC"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("          "),(0,e.Lk)("span",{class:"token keyword"},"try"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("            "),(0,e.Lk)("span",{class:"token keyword"},"const"),(0,e.eW)(" error "),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(),(0,e.Lk)("span",{class:"token function"},"onRejected"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("result"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("            "),(0,e.Lk)("span",{class:"token comment"},"// 只要onRejected执行成功了就需要resolve")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("            "),(0,e.Lk)("span",{class:"token function"},"resolve"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("error"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("          "),(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"catch"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("err"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("            "),(0,e.Lk)("span",{class:"token function"},"reject"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("err"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("          "),(0,e.Lk)("span",{class:"token punctuation"},"}")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("        "),(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"else"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("          "),(0,e.Lk)("span",{class:"token function"},"reject"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("result"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("        "),(0,e.Lk)("span",{class:"token punctuation"},"}")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("      "),(0,e.Lk)("span",{class:"token punctuation"},"}")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("    "),(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("  "),(0,e.Lk)("span",{class:"token punctuation"},"}")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.Lk)("span",{class:"token punctuation"},"}")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"})])]),(0,e.Lk)("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"})])],-1),d=(0,e.Lk)("div",{class:"language-typescript line-numbers-mode","data-highlighter":"prismjs","data-ext":"ts","data-title":"ts"},[(0,e.Lk)("pre",{class:"language-typescript"},[(0,e.Lk)("code",null,[(0,e.Lk)("span",{class:"line"},[(0,e.Lk)("span",{class:"token keyword"},"class"),(0,e.eW)(),(0,e.Lk)("span",{class:"token class-name"},"myPromise"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("  "),(0,e.Lk)("span",{class:"token comment"},"// ……省略……")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("  "),(0,e.Lk)("span",{class:"token keyword"},"private"),(0,e.eW)(),(0,e.Lk)("span",{class:"token function"},"isFunc"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("cb"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"any"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(" resolve"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"any"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(" reject"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"any"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("    "),(0,e.Lk)("span",{class:"token keyword"},"if"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token keyword"},"typeof"),(0,e.eW)(" cb "),(0,e.Lk)("span",{class:"token operator"},"==="),(0,e.eW)(),(0,e.Lk)("span",{class:"token constant"},"FUNC"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("      "),(0,e.Lk)("span",{class:"token keyword"},"try"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("        "),(0,e.Lk)("span",{class:"token keyword"},"const"),(0,e.eW)(" value "),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(),(0,e.Lk)("span",{class:"token function"},"cb"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("result"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("        "),(0,e.Lk)("span",{class:"token function"},"resolve"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("value"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("      "),(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"catch"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("error"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("        "),(0,e.Lk)("span",{class:"token function"},"reject"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("error"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("      "),(0,e.Lk)("span",{class:"token punctuation"},"}")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("    "),(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"else"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("      "),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("state "),(0,e.Lk)("span",{class:"token operator"},"==="),(0,e.eW)(),(0,e.Lk)("span",{class:"token constant"},"FULFILLED"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"?"),(0,e.eW)(),(0,e.Lk)("span",{class:"token function"},"resolve"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("result"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token function"},"reject"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("result"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("    "),(0,e.Lk)("span",{class:"token punctuation"},"}")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("  "),(0,e.Lk)("span",{class:"token punctuation"},"}")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("  "),(0,e.Lk)("span",{class:"token function"},"then"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("onResolved"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"any"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(" onRejected"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"any"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("    "),(0,e.Lk)("span",{class:"token keyword"},"return"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"new"),(0,e.eW)(),(0,e.Lk)("span",{class:"token class-name"},"myPromise"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("resolve"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"any"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(" reject"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"any"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"=>"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("      "),(0,e.Lk)("span",{class:"token keyword"},"if"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("state "),(0,e.Lk)("span",{class:"token operator"},"==="),(0,e.eW)(),(0,e.Lk)("span",{class:"token constant"},"PENDING"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"return"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("      "),(0,e.Lk)("span",{class:"token keyword"},"if"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("state "),(0,e.Lk)("span",{class:"token operator"},"==="),(0,e.eW)(),(0,e.Lk)("span",{class:"token constant"},"FULFILLED"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("        "),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function"},"isFunc"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("onResolved"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(" resolve"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(" reject"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("      "),(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"else"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("        "),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function"},"isFunc"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("onRejected"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(" resolve"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(" reject"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("      "),(0,e.Lk)("span",{class:"token punctuation"},"}")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("    "),(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("  "),(0,e.Lk)("span",{class:"token punctuation"},"}")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.Lk)("span",{class:"token punctuation"},"}")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"})])]),(0,e.Lk)("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"})])],-1),W=(0,e.Lk)("div",{class:"language-typescript line-numbers-mode","data-highlighter":"prismjs","data-ext":"ts","data-title":"ts"},[(0,e.Lk)("pre",{class:"language-typescript"},[(0,e.Lk)("code",null,[(0,e.Lk)("span",{class:"line"},[(0,e.Lk)("span",{class:"token keyword"},"const"),(0,e.eW)(),(0,e.Lk)("span",{class:"token constant"},"PENDING"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},'"pending"'),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.Lk)("span",{class:"token keyword"},"const"),(0,e.eW)(),(0,e.Lk)("span",{class:"token constant"},"FULFILLED"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},'"fulfilled"'),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.Lk)("span",{class:"token keyword"},"const"),(0,e.eW)(),(0,e.Lk)("span",{class:"token constant"},"REJECTED"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},'"rejected"'),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.Lk)("span",{class:"token keyword"},"class"),(0,e.eW)(),(0,e.Lk)("span",{class:"token class-name"},"myPromise"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("  "),(0,e.Lk)("span",{class:"token keyword"},"private"),(0,e.eW)(" state"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"string"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(),(0,e.Lk)("span",{class:"token constant"},"PENDING"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("  "),(0,e.Lk)("span",{class:"token keyword"},"private"),(0,e.eW)(" result"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"any"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"undefined"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("  "),(0,e.Lk)("span",{class:"token keyword"},"private"),(0,e.eW)(),(0,e.Lk)("span",{class:"token function-variable function"},"resolve"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("data"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"any"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"=>"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"any"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("  "),(0,e.Lk)("span",{class:"token keyword"},"private"),(0,e.eW)(),(0,e.Lk)("span",{class:"token function-variable function"},"reject"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("reson"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"any"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"=>"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"any"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("  "),(0,e.Lk)("span",{class:"token function"},"constructor"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token function-variable function"},"func"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("res"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"any"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(" rej"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"any"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"=>"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"void"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("    "),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function-variable function"},"resolve"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("data"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"any"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"=>"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("      "),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function"},"changeState"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token constant"},"FULFILLED"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(" data"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("    "),(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("    "),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function-variable function"},"reject"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("reson"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"any"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"=>"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("      "),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function"},"changeState"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token constant"},"REJECTED"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(" reson"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("    "),(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("    "),(0,e.Lk)("span",{class:"token keyword"},"try"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("      "),(0,e.Lk)("span",{class:"token function"},"func"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("resolve"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("reject"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("    "),(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"catch"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("error"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("      "),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function"},"reject"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("error"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("    "),(0,e.Lk)("span",{class:"token punctuation"},"}")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("  "),(0,e.Lk)("span",{class:"token punctuation"},"}")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("  "),(0,e.Lk)("span",{class:"token keyword"},"private"),(0,e.eW)(),(0,e.Lk)("span",{class:"token function"},"changeState"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("state"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"string"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(" result"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"any"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("    "),(0,e.Lk)("span",{class:"token keyword"},"if"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("state "),(0,e.Lk)("span",{class:"token operator"},"!=="),(0,e.eW)(),(0,e.Lk)("span",{class:"token constant"},"PENDING"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"return"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("    "),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("state "),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(" state"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("    "),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("result "),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(" result"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("    "),(0,e.Lk)("span",{class:"token builtin"},"console"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function"},"log"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("state"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("result"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("  "),(0,e.Lk)("span",{class:"token punctuation"},"}")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("  "),(0,e.Lk)("span",{class:"token keyword"},"private"),(0,e.eW)(),(0,e.Lk)("span",{class:"token function"},"isFunc"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("cb"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"any"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(" resolve"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"any"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(" reject"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"any"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("    "),(0,e.Lk)("span",{class:"token keyword"},"if"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token keyword"},"typeof"),(0,e.eW)(" cb "),(0,e.Lk)("span",{class:"token operator"},"==="),(0,e.eW)(),(0,e.Lk)("span",{class:"token constant"},"FUNC"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("      "),(0,e.Lk)("span",{class:"token keyword"},"try"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("        "),(0,e.Lk)("span",{class:"token keyword"},"const"),(0,e.eW)(" value "),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(),(0,e.Lk)("span",{class:"token function"},"cb"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("result"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("        "),(0,e.Lk)("span",{class:"token function"},"resolve"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("value"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("      "),(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"catch"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("error"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("        "),(0,e.Lk)("span",{class:"token function"},"reject"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("error"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("      "),(0,e.Lk)("span",{class:"token punctuation"},"}")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("    "),(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"else"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("      "),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("state "),(0,e.Lk)("span",{class:"token operator"},"==="),(0,e.eW)(),(0,e.Lk)("span",{class:"token constant"},"FULFILLED"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"?"),(0,e.eW)(),(0,e.Lk)("span",{class:"token function"},"resolve"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("result"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token function"},"reject"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("result"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("    "),(0,e.Lk)("span",{class:"token punctuation"},"}")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("  "),(0,e.Lk)("span",{class:"token punctuation"},"}")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("  "),(0,e.Lk)("span",{class:"token function"},"then"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("onResolved"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"any"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(" onRejected"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"any"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("    "),(0,e.Lk)("span",{class:"token keyword"},"return"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"new"),(0,e.eW)(),(0,e.Lk)("span",{class:"token class-name"},"myPromise"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("resolve"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"any"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(" reject"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"any"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"=>"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("      "),(0,e.Lk)("span",{class:"token keyword"},"if"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("state "),(0,e.Lk)("span",{class:"token operator"},"==="),(0,e.eW)(),(0,e.Lk)("span",{class:"token constant"},"PENDING"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"return"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("      "),(0,e.Lk)("span",{class:"token keyword"},"if"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("state "),(0,e.Lk)("span",{class:"token operator"},"==="),(0,e.eW)(),(0,e.Lk)("span",{class:"token constant"},"FULFILLED"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("        "),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function"},"isFunc"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("onResolved"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(" resolve"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(" reject"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("      "),(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"else"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("        "),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function"},"isFunc"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("onRejected"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(" resolve"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(" reject"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("      "),(0,e.Lk)("span",{class:"token punctuation"},"}")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("    "),(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("  "),(0,e.Lk)("span",{class:"token punctuation"},"}")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.Lk)("span",{class:"token punctuation"},"}")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"})])]),(0,e.Lk)("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"})])],-1),v=(0,e.Fv)('<details class="custom-container details"><summary>浏览器调试代码，可自行尝试</summary><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token keyword">let</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">myPromise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> rej<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>\n<span class="line">  <span class="token function">res</span><span class="token punctuation">(</span><span class="token number">333</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span></span>\n<span class="line">  <span class="token punctuation">(</span>val<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;成功&quot;</span><span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token punctuation">(</span>error<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;失败&quot;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">  <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span></span>\n<span class="line">  <span class="token punctuation">(</span>val<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;成功1&quot;</span><span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token keyword">return</span> <span class="token number">123</span><span class="token punctuation">;</span></span>\n<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token punctuation">(</span>error<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;失败1&quot;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">  <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span></span>\n<span class="line">  <span class="token punctuation">(</span>val<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;成功2&quot;</span><span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token punctuation">(</span>error<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;失败2&quot;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">  <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token comment">// 浏览器返回</span></span>\n<span class="line"><span class="token comment">// 成功 333</span></span>\n<span class="line"><span class="token comment">// 成功1 333</span></span>\n<span class="line"><span class="token comment">// 成功2 123</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="异步情况实现" tabindex="-1"><a class="header-anchor" href="#异步情况实现"><span>异步情况实现</span></a></h2><p>到上面为止我们只考虑了同步时 then 的写法，但是开发时大多数情况我们的代码都是异步的，在异步状态下上面这段代码不会起到任何作用（还没有等 promise 状态变更 then 就已经加载完了）。下面我们考虑一下异步情况，假设我们的 promise 如下：</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token keyword">let</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> rej<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>\n<span class="line">  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token function">res</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们需要等到 promise 状态从 pending 发生改变时再让 then 方法里面的方法执行。也就是在 changeState 时去执行 the 内部 new myPromise 里面的一系列操作，这就需要我们将传入的 onResolved,onRejected, resolve, reject 存起来。再因为 then 可以多次调用，所以要将传入的值存为一个数组</p>',5),m=(0,e.Lk)("div",{class:"language-typescript line-numbers-mode","data-highlighter":"prismjs","data-ext":"ts","data-title":"ts"},[(0,e.Lk)("pre",{class:"language-typescript"},[(0,e.Lk)("code",null,[(0,e.Lk)("span",{class:"line"},[(0,e.Lk)("span",{class:"token keyword"},"class"),(0,e.eW)(),(0,e.Lk)("span",{class:"token class-name"},"myPromise"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("  "),(0,e.Lk)("span",{class:"token comment"},"// 增加")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("  "),(0,e.Lk)("span",{class:"token keyword"},"private"),(0,e.eW)(" handler"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"Array"),(0,e.Lk)("span",{class:"token operator"},"<"),(0,e.Lk)("span",{class:"token builtin"},"any"),(0,e.Lk)("span",{class:"token operator"},">"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"["),(0,e.Lk)("span",{class:"token punctuation"},"]"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("  "),(0,e.Lk)("span",{class:"token comment"},"// ……省略……")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("  "),(0,e.Lk)("span",{class:"token keyword"},"private"),(0,e.eW)(),(0,e.Lk)("span",{class:"token function"},"changeState"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("state"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"string"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(" result"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"any"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("    "),(0,e.Lk)("span",{class:"token keyword"},"if"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("state "),(0,e.Lk)("span",{class:"token operator"},"!=="),(0,e.eW)(),(0,e.Lk)("span",{class:"token constant"},"PENDING"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"return"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("    "),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("state "),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(" state"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("    "),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("result "),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(" result"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("    "),(0,e.Lk)("span",{class:"token comment"},"// 异步情况走这里")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("    "),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function"},"doSomeThing"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("  "),(0,e.Lk)("span",{class:"token punctuation"},"}")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("  "),(0,e.Lk)("span",{class:"token keyword"},"private"),(0,e.eW)(),(0,e.Lk)("span",{class:"token function"},"isFunc"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("cb"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"any"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(" resolve"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"any"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(" reject"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"any"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("    "),(0,e.Lk)("span",{class:"token keyword"},"if"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token keyword"},"typeof"),(0,e.eW)(" cb "),(0,e.Lk)("span",{class:"token operator"},"==="),(0,e.eW)(),(0,e.Lk)("span",{class:"token constant"},"FUNC"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("      "),(0,e.Lk)("span",{class:"token keyword"},"try"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("        "),(0,e.Lk)("span",{class:"token keyword"},"const"),(0,e.eW)(" value "),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(),(0,e.Lk)("span",{class:"token function"},"cb"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("result"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("        "),(0,e.Lk)("span",{class:"token function"},"resolve"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("value"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("      "),(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"catch"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("error"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("        "),(0,e.Lk)("span",{class:"token function"},"reject"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("error"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("      "),(0,e.Lk)("span",{class:"token punctuation"},"}")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("    "),(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"else"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("      "),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("state "),(0,e.Lk)("span",{class:"token operator"},"==="),(0,e.eW)(),(0,e.Lk)("span",{class:"token constant"},"FULFILLED"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"?"),(0,e.eW)(),(0,e.Lk)("span",{class:"token function"},"resolve"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("result"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token function"},"reject"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("result"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("    "),(0,e.Lk)("span",{class:"token punctuation"},"}")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("  "),(0,e.Lk)("span",{class:"token punctuation"},"}")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("  "),(0,e.Lk)("span",{class:"token keyword"},"private"),(0,e.eW)(),(0,e.Lk)("span",{class:"token function"},"doSomeThing"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("    "),(0,e.Lk)("span",{class:"token keyword"},"if"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("state "),(0,e.Lk)("span",{class:"token operator"},"==="),(0,e.eW)(),(0,e.Lk)("span",{class:"token constant"},"PENDING"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"return"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("    "),(0,e.Lk)("span",{class:"token keyword"},"while"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("handler"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("length"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("      "),(0,e.Lk)("span",{class:"token keyword"},"const"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{"),(0,e.eW)(" onResolved"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(" onRejected"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(" resolve"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(" reject "),(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("handler"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function"},"shift"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("      "),(0,e.Lk)("span",{class:"token keyword"},"if"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("state "),(0,e.Lk)("span",{class:"token operator"},"==="),(0,e.eW)(),(0,e.Lk)("span",{class:"token constant"},"PENDING"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"return"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("      "),(0,e.Lk)("span",{class:"token keyword"},"if"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("state "),(0,e.Lk)("span",{class:"token operator"},"==="),(0,e.eW)(),(0,e.Lk)("span",{class:"token constant"},"FULFILLED"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("        "),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function"},"isFunc"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("onResolved"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(" resolve"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(" reject"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("      "),(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"else"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("        "),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function"},"isFunc"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("onRejected"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(" resolve"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(" reject"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("      "),(0,e.Lk)("span",{class:"token punctuation"},"}")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("    "),(0,e.Lk)("span",{class:"token punctuation"},"}")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("  "),(0,e.Lk)("span",{class:"token punctuation"},"}")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("  "),(0,e.Lk)("span",{class:"token function"},"then"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("onResolved"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"any"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(" onRejected"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"any"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("    "),(0,e.Lk)("span",{class:"token keyword"},"return"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"new"),(0,e.eW)(),(0,e.Lk)("span",{class:"token class-name"},"myPromise"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("resolve"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"any"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(" reject"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"any"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"=>"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("      "),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("handler"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function"},"push"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token punctuation"},"{"),(0,e.eW)(" onResolved"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(" onRejected"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(" resolve"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(" reject "),(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("      "),(0,e.Lk)("span",{class:"token comment"},"// 同步情况直接这里")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("      "),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function"},"doSomeThing"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("    "),(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("  "),(0,e.Lk)("span",{class:"token punctuation"},"}")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.Lk)("span",{class:"token punctuation"},"}")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"})])]),(0,e.Lk)("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"})])],-1),b=(0,e.Lk)("div",{class:"language-typescript line-numbers-mode","data-highlighter":"prismjs","data-ext":"ts","data-title":"ts"},[(0,e.Lk)("pre",{class:"language-typescript"},[(0,e.Lk)("code",null,[(0,e.Lk)("span",{class:"line"},[(0,e.Lk)("span",{class:"token keyword"},"const"),(0,e.eW)(),(0,e.Lk)("span",{class:"token constant"},"PENDING"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},'"pending"'),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.Lk)("span",{class:"token keyword"},"const"),(0,e.eW)(),(0,e.Lk)("span",{class:"token constant"},"FULFILLED"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},'"fulfilled"'),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.Lk)("span",{class:"token keyword"},"const"),(0,e.eW)(),(0,e.Lk)("span",{class:"token constant"},"REJECTED"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},'"rejected"'),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.Lk)("span",{class:"token keyword"},"const"),(0,e.eW)(),(0,e.Lk)("span",{class:"token constant"},"FUNC"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},'"function"'),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"}),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.Lk)("span",{class:"token keyword"},"export"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"class"),(0,e.eW)(),(0,e.Lk)("span",{class:"token class-name"},"myPromise"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("  "),(0,e.Lk)("span",{class:"token keyword"},"private"),(0,e.eW)(" state"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"string"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(),(0,e.Lk)("span",{class:"token constant"},"PENDING"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("  "),(0,e.Lk)("span",{class:"token keyword"},"private"),(0,e.eW)(" result"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"any"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"undefined"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("  "),(0,e.Lk)("span",{class:"token keyword"},"private"),(0,e.eW)(" handler"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"Array"),(0,e.Lk)("span",{class:"token operator"},"<"),(0,e.Lk)("span",{class:"token builtin"},"any"),(0,e.Lk)("span",{class:"token operator"},">"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"["),(0,e.Lk)("span",{class:"token punctuation"},"]"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("  "),(0,e.Lk)("span",{class:"token keyword"},"private"),(0,e.eW)(),(0,e.Lk)("span",{class:"token function-variable function"},"resolve"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("data"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"any"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"=>"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"any"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("  "),(0,e.Lk)("span",{class:"token keyword"},"private"),(0,e.eW)(),(0,e.Lk)("span",{class:"token function-variable function"},"reject"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("reson"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"any"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"=>"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"any"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("  "),(0,e.Lk)("span",{class:"token function"},"constructor"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token function-variable function"},"func"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("res"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"any"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(" rej"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"any"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"=>"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"void"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("    "),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function-variable function"},"resolve"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("data"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"any"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"=>"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("      "),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function"},"changeState"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token constant"},"FULFILLED"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(" data"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("    "),(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("    "),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function-variable function"},"reject"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("reson"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"any"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"=>"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("      "),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function"},"changeState"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token constant"},"REJECTED"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(" reson"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("    "),(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("    "),(0,e.Lk)("span",{class:"token keyword"},"try"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("      "),(0,e.Lk)("span",{class:"token function"},"func"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("resolve"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("reject"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("    "),(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"catch"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("error"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("      "),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function"},"reject"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("error"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("    "),(0,e.Lk)("span",{class:"token punctuation"},"}")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("  "),(0,e.Lk)("span",{class:"token punctuation"},"}")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("  "),(0,e.Lk)("span",{class:"token keyword"},"private"),(0,e.eW)(),(0,e.Lk)("span",{class:"token function"},"changeState"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("state"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"string"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(" result"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"any"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("    "),(0,e.Lk)("span",{class:"token keyword"},"if"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("state "),(0,e.Lk)("span",{class:"token operator"},"!=="),(0,e.eW)(),(0,e.Lk)("span",{class:"token constant"},"PENDING"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"return"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("    "),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("state "),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(" state"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("    "),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("result "),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(" result"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("    "),(0,e.Lk)("span",{class:"token comment"},"// 异步情况走这里")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("    "),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function"},"doSomeThing"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("  "),(0,e.Lk)("span",{class:"token punctuation"},"}")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("  "),(0,e.Lk)("span",{class:"token keyword"},"private"),(0,e.eW)(),(0,e.Lk)("span",{class:"token function"},"isFunc"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("cb"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"any"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(" resolve"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"any"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(" reject"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"any"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("    "),(0,e.Lk)("span",{class:"token keyword"},"if"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token keyword"},"typeof"),(0,e.eW)(" cb "),(0,e.Lk)("span",{class:"token operator"},"==="),(0,e.eW)(),(0,e.Lk)("span",{class:"token constant"},"FUNC"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("      "),(0,e.Lk)("span",{class:"token comment"},"// 回调是函数的时候")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("      "),(0,e.Lk)("span",{class:"token keyword"},"try"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("        "),(0,e.Lk)("span",{class:"token keyword"},"const"),(0,e.eW)(" value "),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(),(0,e.Lk)("span",{class:"token function"},"cb"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("result"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("        "),(0,e.Lk)("span",{class:"token function"},"resolve"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("value"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("      "),(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"catch"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("error"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("        "),(0,e.Lk)("span",{class:"token function"},"reject"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("error"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("      "),(0,e.Lk)("span",{class:"token punctuation"},"}")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("    "),(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"else"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("      "),(0,e.Lk)("span",{class:"token comment"},"// 回调不是函数的时候")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("      "),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("state "),(0,e.Lk)("span",{class:"token operator"},"==="),(0,e.eW)(),(0,e.Lk)("span",{class:"token constant"},"FULFILLED"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"?"),(0,e.eW)(),(0,e.Lk)("span",{class:"token function"},"resolve"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("result"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token function"},"reject"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("result"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("    "),(0,e.Lk)("span",{class:"token punctuation"},"}")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("  "),(0,e.Lk)("span",{class:"token punctuation"},"}")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("  "),(0,e.Lk)("span",{class:"token keyword"},"private"),(0,e.eW)(),(0,e.Lk)("span",{class:"token function"},"doSomeThing"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("    "),(0,e.Lk)("span",{class:"token keyword"},"if"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("state "),(0,e.Lk)("span",{class:"token operator"},"==="),(0,e.eW)(),(0,e.Lk)("span",{class:"token constant"},"PENDING"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"return"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("    "),(0,e.Lk)("span",{class:"token keyword"},"while"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("handler"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("length"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("      "),(0,e.Lk)("span",{class:"token keyword"},"const"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{"),(0,e.eW)(" onResolved"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(" onRejected"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(" resolve"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(" reject "),(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("handler"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function"},"shift"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("      "),(0,e.Lk)("span",{class:"token keyword"},"if"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("state "),(0,e.Lk)("span",{class:"token operator"},"==="),(0,e.eW)(),(0,e.Lk)("span",{class:"token constant"},"PENDING"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"return"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("      "),(0,e.Lk)("span",{class:"token keyword"},"if"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("state "),(0,e.Lk)("span",{class:"token operator"},"==="),(0,e.eW)(),(0,e.Lk)("span",{class:"token constant"},"FULFILLED"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("        "),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function"},"isFunc"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("onResolved"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(" resolve"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(" reject"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("      "),(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"else"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("        "),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function"},"isFunc"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("onRejected"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(" resolve"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(" reject"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("      "),(0,e.Lk)("span",{class:"token punctuation"},"}")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("    "),(0,e.Lk)("span",{class:"token punctuation"},"}")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("  "),(0,e.Lk)("span",{class:"token punctuation"},"}")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("  "),(0,e.Lk)("span",{class:"token function"},"then"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("onResolved"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"any"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(" onRejected"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"any"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("    "),(0,e.Lk)("span",{class:"token keyword"},"return"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"new"),(0,e.eW)(),(0,e.Lk)("span",{class:"token class-name"},"myPromise"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("resolve"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"any"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(" reject"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"any"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"=>"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("      "),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("handler"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function"},"push"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token punctuation"},"{"),(0,e.eW)(" onResolved"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(" onRejected"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(" resolve"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(" reject "),(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("      "),(0,e.Lk)("span",{class:"token comment"},"// 同步情况直接这里")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("      "),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function"},"doSomeThing"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("    "),(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.eW)("  "),(0,e.Lk)("span",{class:"token punctuation"},"}")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"},[(0,e.Lk)("span",{class:"token punctuation"},"}")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"line"})])]),(0,e.Lk)("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"}),(0,e.Lk)("div",{class:"line-number"})])],-1),y=(0,e.Fv)('<h2 id="当-then-里面传入的是一个-promise" tabindex="-1"><a class="header-anchor" href="#当-then-里面传入的是一个-promise"><span>当 then 里面传入的是一个 promise</span></a></h2><p>想知道传入的是不是 promise 就需要一个函数来判断，根据 promise 的 A+规范我们可以知道“promise 是一个具有 then 方法的对象或函数”，根据这句话我们就可以写出判断函数</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token keyword">private</span> <span class="token function">isPromiseLike</span><span class="token punctuation">(</span>fn<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">return</span> <span class="token punctuation">(</span></span>\n<span class="line">      fn <span class="token operator">!==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span></span>\n<span class="line">      <span class="token punctuation">(</span><span class="token keyword">typeof</span> fn <span class="token operator">===</span> <span class="token string">&quot;function&quot;</span> <span class="token operator">||</span> <span class="token keyword">typeof</span> fn <span class="token operator">===</span> <span class="token string">&quot;object&quot;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span></span>\n<span class="line">      <span class="token keyword">typeof</span> fn<span class="token punctuation">.</span>then <span class="token operator">===</span> <span class="token string">&quot;function&quot;</span></span>\n<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">  <span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line"><span class="token comment">// 修改isFunc</span></span>\n<span class="line"><span class="token keyword">private</span> <span class="token function">isFunc</span><span class="token punctuation">(</span>cb<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> resolve<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> reject<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> cb <span class="token operator">===</span> <span class="token constant">FUNC</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">      <span class="token comment">// 回调是函数的时候</span></span>\n<span class="line">      <span class="token keyword">try</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token keyword">const</span> value <span class="token operator">=</span> <span class="token function">cb</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isPromiseLike</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">          <span class="token function">value</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span>reject<span class="token punctuation">)</span></span>\n<span class="line">      <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span></span>\n<span class="line">        <span class="token function">resolve</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">      <span class="token punctuation">}</span></span>\n<span class="line">      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">      <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>\n<span class="line">      <span class="token comment">// 回调不是函数的时候</span></span>\n<span class="line">      <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">===</span> <span class="token constant">FULFILLED</span> <span class="token operator">?</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>result<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line">  <span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><p>最后，我们将 then PENDING 和 FUlFILLED 时的方法都放到一个微任务里面里面执行就可以了</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token keyword">const</span> <span class="token constant">PENDING</span> <span class="token operator">=</span> <span class="token string">&quot;pending&quot;</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">const</span> <span class="token constant">FULFILLED</span> <span class="token operator">=</span> <span class="token string">&quot;fulfilled&quot;</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">const</span> <span class="token constant">REJECTED</span> <span class="token operator">=</span> <span class="token string">&quot;rejected&quot;</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">const</span> <span class="token constant">FUNC</span> <span class="token operator">=</span> <span class="token string">&quot;function&quot;</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">myPromise</span> <span class="token punctuation">{</span></span>\n<span class="line">  <span class="token keyword">private</span> state<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token constant">PENDING</span><span class="token punctuation">;</span></span>\n<span class="line">  <span class="token keyword">private</span> result<span class="token operator">:</span> <span class="token builtin">any</span> <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span></span>\n<span class="line">  <span class="token keyword">private</span> handler<span class="token operator">:</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>\n<span class="line">  <span class="token keyword">private</span> <span class="token function-variable function">resolve</span><span class="token operator">:</span> <span class="token punctuation">(</span>data<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span><span class="token punctuation">;</span></span>\n<span class="line">  <span class="token keyword">private</span> <span class="token function-variable function">reject</span><span class="token operator">:</span> <span class="token punctuation">(</span>reson<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span><span class="token punctuation">;</span></span>\n<span class="line">  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token function-variable function">func</span><span class="token operator">:</span> <span class="token punctuation">(</span>res<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> rej<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">resolve</span> <span class="token operator">=</span> <span class="token punctuation">(</span>data<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>\n<span class="line">      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">changeState</span><span class="token punctuation">(</span><span class="token constant">FULFILLED</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">reject</span> <span class="token operator">=</span> <span class="token punctuation">(</span>reson<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>\n<span class="line">      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">changeState</span><span class="token punctuation">(</span><span class="token constant">REJECTED</span><span class="token punctuation">,</span> reson<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token keyword">try</span> <span class="token punctuation">{</span></span>\n<span class="line">      <span class="token function">func</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>resolve<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>reject<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line">  <span class="token punctuation">}</span></span>\n<span class="line">  <span class="token keyword">private</span> <span class="token function">changeState</span><span class="token punctuation">(</span>state<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> result<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">!==</span> <span class="token constant">PENDING</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> state<span class="token punctuation">;</span></span>\n<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>result <span class="token operator">=</span> result<span class="token punctuation">;</span></span>\n<span class="line">    <span class="token comment">// 异步情况走这里</span></span>\n<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">doSomeThing</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">  <span class="token punctuation">}</span></span>\n<span class="line">  <span class="token keyword">private</span> <span class="token function">isFunc</span><span class="token punctuation">(</span>cb<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> resolve<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> reject<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token function">queueMicrotask</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>\n<span class="line">      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> cb <span class="token operator">===</span> <span class="token constant">FUNC</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token keyword">try</span> <span class="token punctuation">{</span></span>\n<span class="line">          <span class="token keyword">const</span> value <span class="token operator">=</span> <span class="token function">cb</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isPromiseLike</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">            value<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">          <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>\n<span class="line">            <span class="token function">resolve</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">          <span class="token punctuation">}</span></span>\n<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">          <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token punctuation">}</span></span>\n<span class="line">      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token comment">// 对应的回调不是函数的时候</span></span>\n<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">===</span> <span class="token constant">FULFILLED</span> <span class="token operator">?</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>result<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">      <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">  <span class="token punctuation">}</span></span>\n<span class="line">  <span class="token keyword">private</span> <span class="token function">isPromiseLike</span><span class="token punctuation">(</span>fn<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">return</span> <span class="token punctuation">(</span></span>\n<span class="line">      fn <span class="token operator">!==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span></span>\n<span class="line">      <span class="token punctuation">(</span><span class="token keyword">typeof</span> fn <span class="token operator">===</span> <span class="token string">&quot;function&quot;</span> <span class="token operator">||</span> <span class="token keyword">typeof</span> fn <span class="token operator">===</span> <span class="token string">&quot;object&quot;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span></span>\n<span class="line">      <span class="token keyword">typeof</span> fn<span class="token punctuation">.</span>then <span class="token operator">===</span> <span class="token string">&quot;function&quot;</span></span>\n<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">  <span class="token punctuation">}</span></span>\n<span class="line">  <span class="token keyword">private</span> <span class="token function">doSomeThing</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">===</span> <span class="token constant">PENDING</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>handler<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">      <span class="token keyword">const</span> <span class="token punctuation">{</span> onResolved<span class="token punctuation">,</span> onRejected<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>handler<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">===</span> <span class="token constant">PENDING</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span></span>\n<span class="line">      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">===</span> <span class="token constant">FULFILLED</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isFunc</span><span class="token punctuation">(</span>onResolved<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isFunc</span><span class="token punctuation">(</span>onRejected<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">      <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line">  <span class="token punctuation">}</span></span>\n<span class="line">  <span class="token function">then</span><span class="token punctuation">(</span>onResolved<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> onRejected<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">myPromise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> reject<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>\n<span class="line">      <span class="token keyword">this</span><span class="token punctuation">.</span>handler<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> onResolved<span class="token punctuation">,</span> onRejected<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">      <span class="token comment">// 同步情况直接这里</span></span>\n<span class="line">      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">doSomeThing</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">  <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',6),w={},h=(0,a(262).A)(w,[["render",function(n,s){const a=(0,e.g2)("CodeGroupItem"),w=(0,e.g2)("CodeGroup");return(0,e.uX)(),(0,e.CE)("div",null,[t,p,o,c,(0,e.bF)(w,null,{default:(0,e.k6)((()=>[(0,e.bF)(a,{title:"基本使用"},{default:(0,e.k6)((()=>[k])),_:1}),(0,e.bF)(a,{title:"多次调用"},{default:(0,e.k6)((()=>[l])),_:1}),(0,e.bF)(a,{title:"链式调用"},{default:(0,e.k6)((()=>[i])),_:1})])),_:1}),u,L,(0,e.bF)(w,null,{default:(0,e.k6)((()=>[(0,e.bF)(a,{title:"<then 基础实现>"},{default:(0,e.k6)((()=>[r])),_:1}),(0,e.bF)(a,{title:"<提炼一下重复代码>"},{default:(0,e.k6)((()=>[d])),_:1}),(0,e.bF)(a,{title:"<到目前为止的代码>"},{default:(0,e.k6)((()=>[W])),_:1})])),_:1}),v,(0,e.bF)(w,null,{default:(0,e.k6)((()=>[(0,e.bF)(a,{title:"<修改原有方法>"},{default:(0,e.k6)((()=>[m])),_:1}),(0,e.bF)(a,{title:"<到目前为止的代码>"},{default:(0,e.k6)((()=>[b])),_:1})])),_:1}),y])}]]),f=JSON.parse('{"path":"/promise/then.html","title":"promise.then","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"then 的基础实现","slug":"then-的基础实现","link":"#then-的基础实现","children":[]},{"level":2,"title":"异步情况实现","slug":"异步情况实现","link":"#异步情况实现","children":[]},{"level":2,"title":"当 then 里面传入的是一个 promise","slug":"当-then-里面传入的是一个-promise","link":"#当-then-里面传入的是一个-promise","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"filePathRelative":"promise/then.md","git":{"createdTime":1720200580000,"updatedTime":1720779663000}}')}}]);