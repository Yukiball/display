"use strict";(self.webpackChunkdisplay=self.webpackChunkdisplay||[]).push([[589],{349:(n,s,a)=>{a.r(s),a.d(s,{comp:()=>l,data:()=>o});var p=a(641);const e=[(0,p.Fv)('<h1 id="简单聊聊" tabindex="-1"><a class="header-anchor" href="#简单聊聊"><span>简单聊聊</span></a></h1><p>相信大家对 Promise 并不陌生。陌生的人请看阮大佬写的<a href="https://es6.ruanyifeng.com/#docs/promise" target="_blank" rel="noopener noreferrer">es6 权威指南 promise</a> Promise 是异步编程的一种解决方案，可以解决曾经回调地狱等问题。 Promise 对象有两个特点。一个是对象的状态不受外界影响。另一个是一旦状态改变，就不会再变，任何时候都可以得到这个结果。 Promise 的实例上拥有很多很多的方法供我们使用，下面我们就来逐步手写一个符合 A+规范和ES规范的 Promise😉。</p><h1 id="开始手写" tabindex="-1"><a class="header-anchor" href="#开始手写"><span>开始手写</span></a></h1><h2 id="promise-应该长什么样" tabindex="-1"><a class="header-anchor" href="#promise-应该长什么样"><span>promise 应该长什么样？</span></a></h2><p>首先我们要知道，除了 then、catch、finally 是定义在 Promise 的原型上的方法以外，其他的所有方法都是它的实例方法（可以通过 hasOwnProperty 获取下试试看～）。同时他还有三个状态 pending、fulfilled、rejected。知道了这个我们就可以开始搭建 Promise 框架了。</p><p>如下所示，我们已经搭建好了一个简易 Promise 框架,这是我们能在浏览器看到的 Promise 原型与实例方法，当我们从控制台看到 promise 的时候能大致的想到 promise 应该是长成下面这个样子的。</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token keyword">const</span> <span class="token constant">PENDING</span> <span class="token operator">=</span> <span class="token string">&quot;pending&quot;</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">const</span> <span class="token constant">FULFILLED</span> <span class="token operator">=</span> <span class="token string">&quot;fulfilled&quot;</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">const</span> <span class="token constant">REJECTED</span> <span class="token operator">=</span> <span class="token string">&quot;rejected&quot;</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">class</span> <span class="token class-name">myPromise</span> <span class="token punctuation">{</span></span>\n<span class="line">  <span class="token keyword">private</span> resolve<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span></span>\n<span class="line">  <span class="token keyword">private</span> reject<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span></span>\n<span class="line">  <span class="token keyword">private</span> all<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span></span>\n<span class="line">  <span class="token keyword">private</span> race<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span></span>\n<span class="line">  <span class="token keyword">private</span> allSettled<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span> <span class="token comment">//ES2020</span></span>\n<span class="line">  <span class="token keyword">private</span> <span class="token builtin">any</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span> <span class="token comment">// ES2021</span></span>\n<span class="line">  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>resolve <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>reject <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>all <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>race <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>allSettled <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token builtin">any</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>\n<span class="line">  <span class="token punctuation">}</span></span>\n<span class="line">  <span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;then&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">  <span class="token punctuation">}</span></span>\n<span class="line">  <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;catch&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">  <span class="token punctuation">}</span></span>\n<span class="line">  <span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;finally&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">  <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',7)],t={},l=(0,a(262).A)(t,[["render",function(n,s){return(0,p.uX)(),(0,p.CE)("div",null,e)}]]),o=JSON.parse('{"path":"/promise/introPromise.html","title":"简单聊聊","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"promise 应该长什么样？","slug":"promise-应该长什么样","link":"#promise-应该长什么样","children":[]}],"filePathRelative":"promise/introPromise.md","git":{"createdTime":1720200580000,"updatedTime":1720200580000,"contributors":[{"name":"yuki","email":"1354583681@qq.com","commits":1}]}}')}}]);